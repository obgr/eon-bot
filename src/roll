@bot.command()
async def roll(ctx: commands.Context, roll: str):
    """
    Scalable dice, Rolls a die in NdN+bonus or NtN format.
    """
    try:
        # Pattern to split: "[(T|t|D|d)+$]\s*"
        RollSplit = re.split(r"[(T|t|D|d)+$]\s*", roll)
        number_of_rolls = RollSplit[0]
        sides_to_die = RollSplit[1]
        if len(RollSplit) == 2:
            # If Null set to 0
            bonus = 0
        elif len(RollSplit) == 3:
            bonus = RollSplit[2]
        else:
            if DEBUG is True:
                print("len of RollSplit should only be 2 or 3")
                print("Len: ", len(RollSplit))
        sum_rolls, raw_rolls, total = dice(
            int(number_of_rolls),
            int(bonus),
            int(sides_to_die)
            )
        semiPrettyRolls = ', '.join(raw_rolls)
        user = nick_or_username(ctx)

        results = "{USER} rolled {ROLL}\n".format(USER=user, ROLL=roll.upper())
        results = results + "Rolls............ : {ROLLS}".format(
            ROLLS=semiPrettyRolls
            )
        if int(bonus) != 0:
            results = results + "+ {BONUS}\n".format(BONUS=bonus)
        else:
            results = results + "\n"
        results = results + "Total.............: {TOTAL}".format(TOTAL=total)
    except ValueError:
        await ctx.send("Format has to be in NtN+N, NtN, NdN+N or NdN")
        return

    await ctx.message.add_reaction(emoji_die)
    await ctx.message.add_reaction(emoji_roll)
    await ctx.send(results)